// Generated by view binder compiler. Do not edit!
package com.example.trackmyride.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trackmyride.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustomerLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button loginButtonCustomer;

  @NonNull
  public final EditText loginIdCustomer;

  @NonNull
  public final EditText loginPasswordCustomer;

  @NonNull
  public final EditText loginUsernameCustomer;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView signupRedirectTextCustomer;

  private ActivityCustomerLoginBinding(@NonNull LinearLayout rootView,
      @NonNull Button loginButtonCustomer, @NonNull EditText loginIdCustomer,
      @NonNull EditText loginPasswordCustomer, @NonNull EditText loginUsernameCustomer,
      @NonNull LinearLayout main, @NonNull TextView signupRedirectTextCustomer) {
    this.rootView = rootView;
    this.loginButtonCustomer = loginButtonCustomer;
    this.loginIdCustomer = loginIdCustomer;
    this.loginPasswordCustomer = loginPasswordCustomer;
    this.loginUsernameCustomer = loginUsernameCustomer;
    this.main = main;
    this.signupRedirectTextCustomer = signupRedirectTextCustomer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomerLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomerLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_customer_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomerLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_button_customer;
      Button loginButtonCustomer = ViewBindings.findChildViewById(rootView, id);
      if (loginButtonCustomer == null) {
        break missingId;
      }

      id = R.id.login_Id_customer;
      EditText loginIdCustomer = ViewBindings.findChildViewById(rootView, id);
      if (loginIdCustomer == null) {
        break missingId;
      }

      id = R.id.login_password_customer;
      EditText loginPasswordCustomer = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordCustomer == null) {
        break missingId;
      }

      id = R.id.login_username_customer;
      EditText loginUsernameCustomer = ViewBindings.findChildViewById(rootView, id);
      if (loginUsernameCustomer == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.signupRedirectText_customer;
      TextView signupRedirectTextCustomer = ViewBindings.findChildViewById(rootView, id);
      if (signupRedirectTextCustomer == null) {
        break missingId;
      }

      return new ActivityCustomerLoginBinding((LinearLayout) rootView, loginButtonCustomer,
          loginIdCustomer, loginPasswordCustomer, loginUsernameCustomer, main,
          signupRedirectTextCustomer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
